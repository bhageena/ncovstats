{
    "_": {
        "postman_id": "01c1da01-4227-42bb-8dab-ae32d34dd87f"
    },
    "item": [
        {
            "_": {
                "postman_id": "7022bd44-cae5-4eb2-b8b8-527ac5523d1f"
            },
            "id": "7022bd44-cae5-4eb2-b8b8-527ac5523d1f",
            "name": "worldwide",
            "request": {
                "url": {
                    "protocol": "https",
                    "path": [
                        "api",
                        "ncovstats",
                        "worldwide"
                    ],
                    "host": [
                        "raichand-8hewsxu9v3e-apigcp",
                        "nimbella",
                        "io"
                    ],
                    "query": [],
                    "variable": []
                },
                "method": "GET"
            },
            "response": [
                {
                    "_": {
                        "postman_previewlanguage": "Text"
                    },
                    "id": "79958df2-1a85-40e8-b0c8-797332ad0dd2",
                    "name": "worldwide",
                    "originalRequest": {
                        "url": {
                            "protocol": "https",
                            "path": [
                                "api",
                                "ncovstats",
                                "worldwide"
                            ],
                            "host": [
                                "raichand-8hewsxu9v3e-apigcp",
                                "nimbella",
                                "io"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "method": "GET"
                    },
                    "status": "OK",
                    "code": 200,
                    "header": [
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "source",
                            "value": "WHO"
                        }
                    ],
                    "body": "{\n\"Cases\":\"37,556\", \n\"Deaths\":\"814\",\n\"Cured\":\"2,769\"\n}",
                    "cookie": [],
                    "responseTime": null
                }
            ],
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "id": "2b72ce88-0e89-402e-89c2-aeb3245066c6",
                        "type": "text/javascript",
                        "exec": [
                            "test(\"response is ok\", function () {",
                            "    response.to.have.status(200);",
                            "});",
                            "test(\"source header is present\", function () {",
                            "    response.to.have.header(\"source\");",
                            "});",
                            "test(\"Response time is less than 500ms\", function () {",
                            "    expect(response.responseTime).to.be.below(500);",
                            "});",
                            "test(\"response json data should not have errors\", function () {",
                            "    response.to.have.jsonBody();",
                            "    response.to.not.have.jsonBody('error');",
                            "});",
                            "test(\"Should have valid response\", function () {",
                            "       const jsonData = response.json();",
                            "       expect(jsonData.Cases).to.be.ok;",
                            "       expect(jsonData.Deaths).to.be.ok;",
                            "       expect(jsonData.Cured).to.be.ok;",
                            "});",
                            "test(\"response is ok\", function () {",
                            "    response.to.have.status(200);",
                            "});",
                            "test(\"source header is present\", function () {",
                            "    response.to.have.header(\"source\");",
                            "});",
                            "test(\"Response time is less than 500ms\", function () {",
                            "    expect(response.responseTime).to.be.below(500);",
                            "});",
                            "test(\"response json data should not have errors\", function () {",
                            "    response.to.have.jsonBody();",
                            "    response.to.not.have.jsonBody('error');",
                            "});",
                            "test(\"Should have valid response\", function () {",
                            "       const jsonData = response.json();",
                            "       expect(jsonData.Cases).to.be.ok;",
                            "       expect(jsonData.Deaths).to.be.ok;",
                            "       expect(jsonData.Cured).to.be.ok;",
                            "});",
                            "test(\"response is ok\", function () {",
                            "    response.to.have.status(200);",
                            "});",
                            "test(\"source header is present\", function () {",
                            "    response.to.have.header(\"source\");",
                            "});",
                            "test(\"Response time is less than 500ms\", function () {",
                            "    expect(response.responseTime).to.be.below(500);",
                            "});",
                            "test(\"response json data should not have errors\", function () {",
                            "    response.to.have.jsonBody();",
                            "    response.to.not.have.jsonBody('error');",
                            "});",
                            "test(\"Should have valid response\", function () {",
                            "       const jsonData = response.json();",
                            "       expect(jsonData.Cases).to.be.ok;",
                            "       expect(jsonData.Deaths).to.be.ok;",
                            "       expect(jsonData.Cured).to.be.ok;",
                            "});",
                            "test(\"response is ok\", function () {",
                            "    response.to.have.status(200);",
                            "});",
                            "test(\"source header is present\", function () {",
                            "    response.to.have.header(\"source\");",
                            "});",
                            "test(\"Response time is less than 500ms\", function () {",
                            "    expect(response.responseTime).to.be.below(500);",
                            "});",
                            "test(\"response json data should not have errors\", function () {",
                            "    response.to.have.jsonBody();",
                            "    response.to.not.have.jsonBody('error');",
                            "});",
                            "test(\"Should have valid response\", function () {",
                            "       const jsonData = response.json();",
                            "       expect(jsonData.Cases).to.be.ok;",
                            "       expect(jsonData.Deaths).to.be.ok;",
                            "       expect(jsonData.Cured).to.be.ok;",
                            "});",
                            "test(\"response is ok\", function () {",
                            "    response.to.have.status(200);",
                            "});",
                            "test(\"source header is present\", function () {",
                            "    response.to.have.header(\"source\");",
                            "});",
                            "test(\"Response time is less than 500ms\", function () {",
                            "    expect(response.responseTime).to.be.below(500);",
                            "});",
                            "test(\"response json data should not have errors\", function () {",
                            "    response.to.have.jsonBody();",
                            "    response.to.not.have.jsonBody('error');",
                            "});",
                            "test(\"Should have valid response\", function () {",
                            "       const jsonData = response.json();",
                            "       expect(jsonData.Cases).to.be.ok;",
                            "       expect(jsonData.Deaths).to.be.ok;",
                            "       expect(jsonData.Cured).to.be.ok;",
                            "});",
                            "test(\"response is ok\", function () {",
                            "    response.to.have.status(200);",
                            "});",
                            "test(\"source header is present\", function () {",
                            "    response.to.have.header(\"source\");",
                            "});",
                            "test(\"Response time is less than 500ms\", function () {",
                            "    expect(response.responseTime).to.be.below(500);",
                            "});",
                            "test(\"response json data should not have errors\", function () {",
                            "    response.to.have.jsonBody();",
                            "    response.to.not.have.jsonBody('error');",
                            "});",
                            "test(\"Should have valid response\", function () {",
                            "       const jsonData = response.json();",
                            "       expect(jsonData.Cases).to.be.ok;",
                            "       expect(jsonData.Deaths).to.be.ok;",
                            "       expect(jsonData.Cured).to.be.ok;",
                            "});",
                            "test(\"response is ok\", function () {",
                            "    response.to.have.status(200);",
                            "});",
                            "test(\"source header is present\", function () {",
                            "    response.to.have.header(\"source\");",
                            "});",
                            "test(\"Response time is less than 500ms\", function () {",
                            "    expect(response.responseTime).to.be.below(500);",
                            "});",
                            "test(\"response json data should not have errors\", function () {",
                            "    response.to.have.jsonBody();",
                            "    response.to.not.have.jsonBody('error');",
                            "});",
                            "test(\"Should have valid response\", function () {",
                            "       const jsonData = response.json();",
                            "       expect(jsonData.Cases).to.be.ok;",
                            "       expect(jsonData.Deaths).to.be.ok;",
                            "       expect(jsonData.Cured).to.be.ok;",
                            "});",
                            "test(\"response is ok\", function () {",
                            "    response.to.have.status(200);",
                            "});",
                            "test(\"source header is present\", function () {",
                            "    response.to.have.header(\"source\");",
                            "});",
                            "test(\"Response time is less than 500ms\", function () {",
                            "    expect(response.responseTime).to.be.below(500);",
                            "});",
                            "test(\"response json data should not have errors\", function () {",
                            "    response.to.have.jsonBody();",
                            "    response.to.not.have.jsonBody('error');",
                            "});",
                            "test(\"Should have valid response\", function () {",
                            "       const jsonData = response.json();",
                            "       expect(jsonData.Cases).to.be.ok;",
                            "       expect(jsonData.Deaths).to.be.ok;",
                            "       expect(jsonData.Cured).to.be.ok;",
                            "});",
                            "test(\"response is ok\", function () {",
                            "    response.to.have.status(200);",
                            "});",
                            "test(\"source header is present\", function () {",
                            "    response.to.have.header(\"source\");",
                            "});",
                            "test(\"Response time is less than 500ms\", function () {",
                            "    expect(response.responseTime).to.be.below(500);",
                            "});",
                            "test(\"response json data should not have errors\", function () {",
                            "    response.to.have.jsonBody();",
                            "    response.to.not.have.jsonBody('error');",
                            "});",
                            "test(\"Should have valid response\", function () {",
                            "       const jsonData = response.json();",
                            "       expect(jsonData.Cases).to.be.ok;",
                            "       expect(jsonData.Deaths).to.be.ok;",
                            "       expect(jsonData.Cured).to.be.ok;",
                            "});",
                            "test(\"response is ok\", function () {",
                            "    response.to.have.status(200);",
                            "});",
                            "test(\"source header is present\", function () {",
                            "    response.to.have.header(\"source\");",
                            "});",
                            "test(\"Response time is less than 500ms\", function () {",
                            "    expect(response.responseTime).to.be.below(500);",
                            "});",
                            "test(\"response json data should not have errors\", function () {",
                            "    response.to.have.jsonBody();",
                            "    response.to.not.have.jsonBody('error');",
                            "});",
                            "test(\"Should have valid response\", function () {",
                            "       const jsonData = response.json();",
                            "       expect(jsonData.Cases).to.be.ok;",
                            "       expect(jsonData.Deaths).to.be.ok;",
                            "       expect(jsonData.Cured).to.be.ok;",
                            "});",
                            "test(\"response is ok\", function () {",
                            "    response.to.have.status(200);",
                            "});",
                            "test(\"source header is present\", function () {",
                            "    response.to.have.header(\"source\");",
                            "});",
                            "test(\"Response time is less than 500ms\", function () {",
                            "    expect(response.responseTime).to.be.below(500);",
                            "});",
                            "test(\"response json data should not have errors\", function () {",
                            "    response.to.have.jsonBody();",
                            "    response.to.not.have.jsonBody('error');",
                            "});",
                            "test(\"Should have valid response\", function () {",
                            "       const jsonData = response.json();",
                            "       expect(jsonData.Cases).to.be.ok;",
                            "       expect(jsonData.Deaths).to.be.ok;",
                            "       expect(jsonData.Cured).to.be.ok;",
                            "});",
                            "test(\"response is ok\", function () {",
                            "    response.to.have.status(200);",
                            "});",
                            "test(\"source header is present\", function () {",
                            "    response.to.have.header(\"source\");",
                            "});",
                            "test(\"Response time is less than 500ms\", function () {",
                            "    expect(response.responseTime).to.be.below(500);",
                            "});",
                            "test(\"response json data should not have errors\", function () {",
                            "    response.to.have.jsonBody();",
                            "    response.to.not.have.jsonBody('error');",
                            "});",
                            "test(\"Should have valid response\", function () {",
                            "       const jsonData = response.json();",
                            "       expect(jsonData.Cases).to.be.ok;",
                            "       expect(jsonData.Deaths).to.be.ok;",
                            "       expect(jsonData.Cured).to.be.ok;",
                            "});",
                            "test(\"response is ok\", function () {",
                            "    response.to.have.status(200);",
                            "});",
                            "test(\"source header is present\", function () {",
                            "    response.to.have.header(\"source\");",
                            "});",
                            "test(\"Response time is less than 500ms\", function () {",
                            "    expect(response.responseTime).to.be.below(500);",
                            "});",
                            "test(\"response json data should not have errors\", function () {",
                            "    response.to.have.jsonBody();",
                            "    response.to.not.have.jsonBody('error');",
                            "});",
                            "test(\"Should have valid response\", function () {",
                            "       const jsonData = response.json();",
                            "       expect(jsonData.Cases).to.be.ok;",
                            "       expect(jsonData.Deaths).to.be.ok;",
                            "       expect(jsonData.Cured).to.be.ok;",
                            "});",
                            "test(\"response is ok\", function () {",
                            "    response.to.have.status(200);",
                            "});",
                            "test(\"source header is present\", function () {",
                            "    response.to.have.header(\"source\");",
                            "});",
                            "test(\"Response time is less than 500ms\", function () {",
                            "    expect(response.responseTime).to.be.below(500);",
                            "});",
                            "test(\"response json data should not have errors\", function () {",
                            "    response.to.have.jsonBody();",
                            "    response.to.not.have.jsonBody('error');",
                            "});",
                            "test(\"Should have valid response\", function () {",
                            "       const jsonData = response.json();",
                            "       expect(jsonData.Cases).to.be.ok;",
                            "       expect(jsonData.Deaths).to.be.ok;",
                            "       expect(jsonData.Cured).to.be.ok;",
                            "});",
                            "test(\"response is ok\", function () {",
                            "    response.to.have.status(200);",
                            "});",
                            "test(\"source header is present\", function () {",
                            "    response.to.have.header(\"source\");",
                            "});",
                            "test(\"Response time is less than 500ms\", function () {",
                            "    expect(response.responseTime).to.be.below(500);",
                            "});",
                            "test(\"response json data should not have errors\", function () {",
                            "    response.to.have.jsonBody();",
                            "    response.to.not.have.jsonBody('error');",
                            "});",
                            "test(\"Should have valid response\", function () {",
                            "       const jsonData = response.json();",
                            "       expect(jsonData.Cases).to.be.ok;",
                            "       expect(jsonData.Deaths).to.be.ok;",
                            "       expect(jsonData.Cured).to.be.ok;",
                            "});",
                            "test(\"response is ok\", function () {",
                            "    response.to.have.status(200);",
                            "});",
                            "test(\"source header is present\", function () {",
                            "    response.to.have.header(\"source\");",
                            "});",
                            "test(\"Response time is less than 500ms\", function () {",
                            "    expect(response.responseTime).to.be.below(500);",
                            "});",
                            "test(\"response json data should not have errors\", function () {",
                            "    response.to.have.jsonBody();",
                            "    response.to.not.have.jsonBody('error');",
                            "});",
                            "test(\"Should have valid response\", function () {",
                            "       const jsonData = response.json();",
                            "       expect(jsonData.Cases).to.be.ok;",
                            "       expect(jsonData.Deaths).to.be.ok;",
                            "       expect(jsonData.Cured).to.be.ok;",
                            "});",
                            "test(\"response is ok\", function () {",
                            "    response.to.have.status(200);",
                            "});",
                            "test(\"source header is present\", function () {",
                            "    response.to.have.header(\"source\");",
                            "});",
                            "test(\"Response time is less than 500ms\", function () {",
                            "    expect(response.responseTime).to.be.below(500);",
                            "});",
                            "test(\"response json data should not have errors\", function () {",
                            "    response.to.have.jsonBody();",
                            "    response.to.not.have.jsonBody('error');",
                            "});",
                            "test(\"Should have valid response\", function () {",
                            "       const jsonData = response.json();",
                            "       expect(jsonData.Cases).to.be.ok;",
                            "       expect(jsonData.Deaths).to.be.ok;",
                            "       expect(jsonData.Cured).to.be.ok;",
                            "});",
                            "test(\"response is ok\", function () {",
                            "    response.to.have.status(200);",
                            "});",
                            "test(\"source header is present\", function () {",
                            "    response.to.have.header(\"source\");",
                            "});",
                            "test(\"Response time is less than 500ms\", function () {",
                            "    expect(response.responseTime).to.be.below(500);",
                            "});",
                            "test(\"response json data should not have errors\", function () {",
                            "    response.to.have.jsonBody();",
                            "    response.to.not.have.jsonBody('error');",
                            "});",
                            "test(\"Should have valid response\", function () {",
                            "       const jsonData = response.json();",
                            "       expect(jsonData.Cases).to.be.ok;",
                            "       expect(jsonData.Deaths).to.be.ok;",
                            "       expect(jsonData.Cured).to.be.ok;",
                            "});",
                            "test(\"response is ok\", function () {",
                            "    response.to.have.status(200);",
                            "});",
                            "test(\"source header is present\", function () {",
                            "    response.to.have.header(\"source\");",
                            "});",
                            "test(\"Response time is less than 500ms\", function () {",
                            "    expect(response.responseTime).to.be.below(500);",
                            "});",
                            "test(\"response json data should not have errors\", function () {",
                            "    response.to.have.jsonBody();",
                            "    response.to.not.have.jsonBody('error');",
                            "});",
                            "test(\"Should have valid response\", function () {",
                            "       const jsonData = response.json();",
                            "       expect(jsonData.Cases).to.be.ok;",
                            "       expect(jsonData.Deaths).to.be.ok;",
                            "       expect(jsonData.Cured).to.be.ok;",
                            "});",
                            "test(\"response is ok\", function () {",
                            "    response.to.have.status(200);",
                            "});",
                            "test(\"source header is present\", function () {",
                            "    response.to.have.header(\"source\");",
                            "});",
                            "test(\"Response time is less than 500ms\", function () {",
                            "    expect(response.responseTime).to.be.below(500);",
                            "});",
                            "test(\"response json data should not have errors\", function () {",
                            "    response.to.have.jsonBody();",
                            "    response.to.not.have.jsonBody('error');",
                            "});",
                            "test(\"Should have valid response\", function () {",
                            "       const jsonData = response.json();",
                            "       expect(jsonData.Cases).to.be.ok;",
                            "       expect(jsonData.Deaths).to.be.ok;",
                            "       expect(jsonData.Cured).to.be.ok;",
                            "});",
                            "test(\"response is ok\", function () {",
                            "    response.to.have.status(200);",
                            "});",
                            "test(\"source header is present\", function () {",
                            "    response.to.have.header(\"source\");",
                            "});",
                            "test(\"Response time is less than 500ms\", function () {",
                            "    expect(response.responseTime).to.be.below(500);",
                            "});",
                            "test(\"response json data should not have errors\", function () {",
                            "    response.to.have.jsonBody();",
                            "    response.to.not.have.jsonBody('error');",
                            "});",
                            "test(\"Should have valid response\", function () {",
                            "       const jsonData = response.json();",
                            "       expect(jsonData.Cases).to.be.ok;",
                            "       expect(jsonData.Deaths).to.be.ok;",
                            "       expect(jsonData.Cured).to.be.ok;",
                            "});",
                            "test(\"response is ok\", function () {",
                            "    response.to.have.status(200);",
                            "});",
                            "test(\"source header is present\", function () {",
                            "    response.to.have.header(\"source\");",
                            "});",
                            "test(\"Response time is less than 500ms\", function () {",
                            "    expect(response.responseTime).to.be.below(500);",
                            "});",
                            "test(\"response json data should not have errors\", function () {",
                            "    response.to.have.jsonBody();",
                            "    response.to.not.have.jsonBody('error');",
                            "});",
                            "test(\"Should have valid response\", function () {",
                            "       const jsonData = response.json();",
                            "       expect(jsonData.Cases).to.be.ok;",
                            "       expect(jsonData.Deaths).to.be.ok;",
                            "       expect(jsonData.Cured).to.be.ok;",
                            "});",
                            "test(\"response is ok\", function () {",
                            "    response.to.have.status(200);",
                            "});",
                            "test(\"source header is present\", function () {",
                            "    response.to.have.header(\"source\");",
                            "});",
                            "test(\"Response time is less than 500ms\", function () {",
                            "    expect(response.responseTime).to.be.below(500);",
                            "});",
                            "test(\"response json data should not have errors\", function () {",
                            "    response.to.have.jsonBody();",
                            "    response.to.not.have.jsonBody('error');",
                            "});",
                            "test(\"Should have valid response\", function () {",
                            "       const jsonData = response.json();",
                            "       expect(jsonData.Cases).to.be.ok;",
                            "       expect(jsonData.Deaths).to.be.ok;",
                            "       expect(jsonData.Cured).to.be.ok;",
                            "});",
                            "test(\"response is ok\", function () {",
                            "    response.to.have.status(200);",
                            "});",
                            "test(\"source header is present\", function () {",
                            "    response.to.have.header(\"source\");",
                            "});",
                            "test(\"Response time is less than 500ms\", function () {",
                            "    expect(response.responseTime).to.be.below(500);",
                            "});",
                            "test(\"response json data should not have errors\", function () {",
                            "    response.to.have.jsonBody();",
                            "    response.to.not.have.jsonBody('error');",
                            "});",
                            "test(\"Should have valid response\", function () {",
                            "       const jsonData = response.json();",
                            "       expect(jsonData.Cases).to.be.ok;",
                            "       expect(jsonData.Deaths).to.be.ok;",
                            "       expect(jsonData.Cured).to.be.ok;",
                            "});",
                            "test(\"response is ok\", function () {",
                            "    response.to.have.status(200);",
                            "});",
                            "test(\"source header is present\", function () {",
                            "    response.to.have.header(\"source\");",
                            "});",
                            "test(\"Response time is less than 500ms\", function () {",
                            "    expect(response.responseTime).to.be.below(500);",
                            "});",
                            "test(\"response json data should not have errors\", function () {",
                            "    response.to.have.jsonBody();",
                            "    response.to.not.have.jsonBody('error');",
                            "});",
                            "test(\"Should have valid response\", function () {",
                            "       const jsonData = response.json();",
                            "       expect(jsonData.Cases).to.be.ok;",
                            "       expect(jsonData.Deaths).to.be.ok;",
                            "       expect(jsonData.Cured).to.be.ok;",
                            "});",
                            "test(\"response is ok\", function () {",
                            "    response.to.have.status(200);",
                            "});",
                            "test(\"source header is present\", function () {",
                            "    response.to.have.header(\"source\");",
                            "});",
                            "test(\"Response time is less than 500ms\", function () {",
                            "    expect(response.responseTime).to.be.below(500);",
                            "});",
                            "test(\"response json data should not have errors\", function () {",
                            "    response.to.have.jsonBody();",
                            "    response.to.not.have.jsonBody('error');",
                            "});",
                            "test(\"Should have valid response\", function () {",
                            "       const jsonData = response.json();",
                            "       expect(jsonData.Cases).to.be.ok;",
                            "       expect(jsonData.Deaths).to.be.ok;",
                            "       expect(jsonData.Cured).to.be.ok;",
                            "});",
                            "test(\"response is ok\", function () {",
                            "    response.to.have.status(200);",
                            "});",
                            "test(\"source header is present\", function () {",
                            "    response.to.have.header(\"source\");",
                            "});",
                            "test(\"Response time is less than 500ms\", function () {",
                            "    expect(response.responseTime).to.be.below(500);",
                            "});",
                            "test(\"response json data should not have errors\", function () {",
                            "    response.to.have.jsonBody();",
                            "    response.to.not.have.jsonBody('error');",
                            "});",
                            "test(\"Should have valid response\", function () {",
                            "       const jsonData = response.json();",
                            "       expect(jsonData.Cases).to.be.ok;",
                            "       expect(jsonData.Deaths).to.be.ok;",
                            "       expect(jsonData.Cured).to.be.ok;",
                            "});",
                            "test(\"response is ok\", function () {",
                            "    response.to.have.status(200);",
                            "});",
                            "test(\"source header is present\", function () {",
                            "    response.to.have.header(\"source\");",
                            "});",
                            "test(\"Response time is less than 500ms\", function () {",
                            "    expect(response.responseTime).to.be.below(500);",
                            "});",
                            "test(\"response json data should not have errors\", function () {",
                            "    response.to.have.jsonBody();",
                            "    response.to.not.have.jsonBody('error');",
                            "});",
                            "test(\"Should have valid response\", function () {",
                            "       const jsonData = response.json();",
                            "       expect(jsonData.Cases).to.be.ok;",
                            "       expect(jsonData.Deaths).to.be.ok;",
                            "       expect(jsonData.Cured).to.be.ok;",
                            "});",
                            "test(\"response is ok\", function () {",
                            "    response.to.have.status(200);",
                            "});",
                            "test(\"source header is present\", function () {",
                            "    response.to.have.header(\"source\");",
                            "});",
                            "test(\"Response time is less than 500ms\", function () {",
                            "    expect(response.responseTime).to.be.below(500);",
                            "});",
                            "test(\"response json data should not have errors\", function () {",
                            "    response.to.have.jsonBody();",
                            "    response.to.not.have.jsonBody('error');",
                            "});",
                            "test(\"Should have valid response\", function () {",
                            "       const jsonData = response.json();",
                            "       expect(jsonData.Cases).to.be.ok;",
                            "       expect(jsonData.Deaths).to.be.ok;",
                            "       expect(jsonData.Cured).to.be.ok;",
                            "});",
                            "test(\"response is ok\", function () {",
                            "    response.to.have.status(200);",
                            "});",
                            "test(\"source header is present\", function () {",
                            "    response.to.have.header(\"source\");",
                            "});",
                            "test(\"Response time is less than 500ms\", function () {",
                            "    expect(response.responseTime).to.be.below(500);",
                            "});",
                            "test(\"response json data should not have errors\", function () {",
                            "    response.to.have.jsonBody();",
                            "    response.to.not.have.jsonBody('error');",
                            "});",
                            "test(\"Should have valid response\", function () {",
                            "       const jsonData = response.json();",
                            "       expect(jsonData.Cases).to.be.ok;",
                            "       expect(jsonData.Deaths).to.be.ok;",
                            "       expect(jsonData.Cured).to.be.ok;",
                            "});",
                            "test(\"response is ok\", function () {",
                            "    response.to.have.status(200);",
                            "});",
                            "test(\"source header is present\", function () {",
                            "    response.to.have.header(\"source\");",
                            "});",
                            "test(\"Response time is less than 500ms\", function () {",
                            "    expect(response.responseTime).to.be.below(500);",
                            "});",
                            "test(\"response json data should not have errors\", function () {",
                            "    response.to.have.jsonBody();",
                            "    response.to.not.have.jsonBody('error');",
                            "});",
                            "test(\"Should have valid response\", function () {",
                            "       const jsonData = response.json();",
                            "       expect(jsonData.Cases).to.be.ok;",
                            "       expect(jsonData.Deaths).to.be.ok;",
                            "       expect(jsonData.Cured).to.be.ok;",
                            "});",
                            "test(\"response is ok\", function () {",
                            "    response.to.have.status(200);",
                            "});",
                            "test(\"source header is present\", function () {",
                            "    response.to.have.header(\"source\");",
                            "});",
                            "test(\"Response time is less than 500ms\", function () {",
                            "    expect(response.responseTime).to.be.below(500);",
                            "});",
                            "test(\"response json data should not have errors\", function () {",
                            "    response.to.have.jsonBody();",
                            "    response.to.not.have.jsonBody('error');",
                            "});",
                            "test(\"Should have valid response\", function () {",
                            "       const jsonData = response.json();",
                            "       expect(jsonData.Cases).to.be.ok;",
                            "       expect(jsonData.Deaths).to.be.ok;",
                            "       expect(jsonData.Cured).to.be.ok;",
                            "});",
                            "test(\"response is ok\", function () {",
                            "    response.to.have.status(200);",
                            "});",
                            "test(\"source header is present\", function () {",
                            "    response.to.have.header(\"source\");",
                            "});",
                            "test(\"Response time is less than 500ms\", function () {",
                            "    expect(response.responseTime).to.be.below(500);",
                            "});",
                            "test(\"response json data should not have errors\", function () {",
                            "    response.to.have.jsonBody();",
                            "    response.to.not.have.jsonBody('error');",
                            "});",
                            "test(\"Should have valid response\", function () {",
                            "       const jsonData = response.json();",
                            "       expect(jsonData.Cases).to.be.ok;",
                            "       expect(jsonData.Deaths).to.be.ok;",
                            "       expect(jsonData.Cured).to.be.ok;",
                            "});",
                            "test(\"response is ok\", function () {",
                            "    response.to.have.status(200);",
                            "});",
                            "test(\"source header is present\", function () {",
                            "    response.to.have.header(\"source\");",
                            "});",
                            "test(\"Response time is less than 500ms\", function () {",
                            "    expect(response.responseTime).to.be.below(500);",
                            "});",
                            "test(\"response json data should not have errors\", function () {",
                            "    response.to.have.jsonBody();",
                            "    response.to.not.have.jsonBody('error');",
                            "});",
                            "test(\"Should have valid response\", function () {",
                            "       const jsonData = response.json();",
                            "       expect(jsonData.Cases).to.be.ok;",
                            "       expect(jsonData.Deaths).to.be.ok;",
                            "       expect(jsonData.Cured).to.be.ok;",
                            "});",
                            "test(\"response is ok\", function () {",
                            "    response.to.have.status(200);",
                            "});",
                            "test(\"source header is present\", function () {",
                            "    response.to.have.header(\"source\");",
                            "});",
                            "test(\"Response time is less than 500ms\", function () {",
                            "    expect(response.responseTime).to.be.below(500);",
                            "});",
                            "test(\"response json data should not have errors\", function () {",
                            "    response.to.have.jsonBody();",
                            "    response.to.not.have.jsonBody('error');",
                            "});",
                            "test(\"Should have valid response\", function () {",
                            "       const jsonData = response.json();",
                            "       expect(jsonData.Cases).to.be.ok;",
                            "       expect(jsonData.Deaths).to.be.ok;",
                            "       expect(jsonData.Cured).to.be.ok;",
                            "});",
                            "pm.test(\"response is ok\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "pm.test(\"source header is present\", function () {",
                            "    pm.response.to.have.header(\"source\");",
                            "});",
                            "pm.test(\"Response time is less than 500ms\", function () {",
                            "    pm.expect(pm.response.responseTime).to.be.below(500);",
                            "});",
                            "pm.test(\"response json data should not have errors\", function () {",
                            "    pm.response.to.have.jsonBody();",
                            "    pm.response.to.not.have.jsonBody('error');",
                            "});",
                            "pm.test(\"Should have valid response\", function () {",
                            "       const jsonData = pm.response.json();",
                            "       pm.expect(jsonData.Cases).to.be.ok;",
                            "       pm.expect(jsonData.Deaths).to.be.ok;",
                            "       pm.expect(jsonData.Cured).to.be.ok;",
                            "});"
                        ]
                    }
                }
            ],
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            }
        }
    ],
    "event": [],
    "variable": [],
    "info": {
        "_postman_id": "01c1da01-4227-42bb-8dab-ae32d34dd87f",
        "name": "nCovStats",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
        "description": {
            "content": "Coronaviruses (CoV) are a large family of viruses that cause illness ranging from the common cold to more severe diseases such as Middle East Respiratory Syndrome (MERS-CoV) and Severe Acute Respiratory Syndrome (SARS-CoV). A novel coronavirus (nCoV) is a new strain that has not been previously identified in humans.  ",
            "type": "text/plain"
        }
    }
}